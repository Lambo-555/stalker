import { Logger } from '@nestjs/common';
import { Scene, SceneEnter, Command, Ctx, Action } from 'nestjs-telegraf';
import { AppService } from 'src/app.service';
import { PlayerDataDto } from 'src/common/player-data.dto';
import { ChaptersEntity } from 'src/user/entities/chapters.entity';
import { Markup, Scenes } from 'telegraf';
import { TelegrafContext } from '../interfaces/telegraf-context.interface';
import { ScenesEnum } from './enums/scenes.enum';

@Scene(ScenesEnum.SCENE_PDA)
export class PdaScene {
  private readonly logger = new Logger(PdaScene.name);

  constructor(private readonly appService: AppService) {}

  @SceneEnter()
  async onSceneEnter(@Ctx() ctx: TelegrafContext) {
    const playerData: PlayerDataDto = await this.appService.getStorePlayerData(
      ctx,
    );
    // const nextChapter: ChaptersEntity = await this.appService.getNextChapter(
    //   playerData,
    // );
    const nextChapter: ChaptersEntity = await this.appService.getGoalChapter(
      playerData,
    );
    const nextLocation = await this.appService.getLocation(
      nextChapter.location,
    );
    const keyboard = Markup.inlineKeyboard([
      Markup.button.callback('–ú–µ–Ω—é', 'menu'),
    ]).reply_markup;
    const pdaMenu = `
üìü –í—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Å–≤–æ–π –ö–ü–ö(PDA)

–¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è: ${playerData.playerLocation.location}
–¶–µ–ª–µ–≤–∞—è –ª–æ–∫–∞—Ü–∏—è: ${nextLocation.location}`;
    await this.appService.updateDisplay(
      playerData.playerProgress,
      keyboard,
      pdaMenu,
      playerData.playerLocation.image,
    );
  }

  // const x = `
  //     . –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ "${pdaVersion}
  //   –°—Ä–µ–¥—Å—Ç–≤–∞: ${ user.funds }üõ¢,
  // –ó–¥–æ—Ä–æ–≤—å–µ: ${ user.health }ü´Ä, –†–∞–¥–∏–∞—Ü–∏—è: ${ user.radiation }‚ò¢Ô∏è,
  // –ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ: ${ 0 }ü©∏, –ü—Å–∏ - —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${ 100 }üß†,
  // üì± /about - –û –ö–ü–ö
  // üéí /inventory - –†—é–∫–∑–∞–∫ (wip)
  // üìª /radioTune - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ª–Ω—ã —Ä–∞–¥–∏–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏ <b>PDA-X16</b >)
  // üìç /location - –¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è
  // ü™¨ /quest - –¢–µ–∫—É—à–∏–π –∫–≤–µ—Å—Ç-–∑–∞–¥–∞—á–∞, –µ—ë –ª–æ–∫–∞—Ü–∏—è
  // üéüüí¥ /buyTickets - –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤ (wip)
  // üîëüí≥ /crypto - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–æ–≤ (wip)
  // üïØ /chat - –î–æ—Å—Ç—É–ø V —á–∞—Ç —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ (wip —Ç–æ—Ä–≥–æ–≤–ª—è)
  // üó∫ /map - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –ó–æ–Ω—ã (wip)
  // üé≠ /art - –ê—Ä—Ç—ã –ø—Ä–æ STALKER (wip)
  // üÜò /help - –ü–æ–º–æ—â—å –∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è
  // üìä /statistics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ (wip)
  // üí° /feedback - –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ–± –æ—à–∏–±–∫–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
  // üí° /creators - –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ–± –æ—à–∏–±–∫–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö`;
  //   }
  //   @Command('/creators')
  //   async onCreators(@Ctx() ctx: TelegrafContext, @Next() next: NextFunction) {
  //     await ctx.replyWithHTML(`
  // <b>–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:</b>
  // - –ú–∞–ª—ã—à–µ–≤ –°—Ç–∞–Ω–∏—Å–ª–∞–≤ - director, backend-developer
  //     `);
  //   }
  //   @Command('/help')
  //   async onHelp(@Ctx() ctx: TelegrafContext, @Next() next: NextFunction) {
  //     await ctx.replyWithHTML(`
  // <b>–ü–æ–º–æ—â—å:</b>
  // –î–∞–Ω–Ω–∞—è –∏–≥—Ä–∞ - –Ω–æ–≤–µ–ª–ª–∞ –ø–æ —Å—é–∂–µ—Ç—É –∏–≥—Ä—ã –°—Ç–∞–ª–∫–µ—Ä.
  // –ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Å—é–∂–µ—Ç –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ –Ω—É–∂–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∏ –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥ —Å NPC.
  // –¢–µ–∫—É—â—É—é –ª–æ–∫–∞—Ü–∏—é –∏ –º–µ—Å—Ç–æ, –∫—É–¥–∞ –Ω—É–∂–Ω–æ —É–π—Ç–∏ –º–æ–∂–Ω–æ —É–∑–∞—Ç—å –≤ PDA.
  // –†—è–¥ —Ñ—Ä–∞–∑ –∏–∑–º–µ–Ω–µ–Ω—ã, —á—Ç–æ–±—ã –ø–æ–º–µ—â–∞—Ç—å—Å—è –≤ –ª–∏–º–∏—Ç—ã —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞ –ø–æ –∫–Ω–æ–ø–∫–∞–º.
  // –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ä–µ—à–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –Ω–∏ –Ω–∞ —á—Ç–æ –Ω–µ –≤–ª–∏—è—é—Ç, –Ω–æ –≤–µ–¥–µ—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Ä–º—ã, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–ª–∏—è—Ç—å –Ω–∞ –∫–æ–Ω—Ü–æ–≤–∫–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±—Ä–∞—Ç—å —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –≤ –¥–∏–∞–ª–æ–≥–∞—Ö.
  // `);
  //   }
  //   @Command('/about')
  //   async onAbout(@Ctx() ctx: TelegrafContext, @Next() next: NextFunction) {
  //     await ctx.reply(
  //       `
  // –ö–ü–ö, –æ–Ω –∂–µ PDA - —Å–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –¥–µ–≤–∞–π—Å –≤ –ó–æ–Ω–µ. –ü—Ä–∏—á–∏–Ω —Ç–æ–º—É –Ω–µ—Å–∫–æ–ª—å–∫–æ:
  // - –¥—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–∏ —Å—Ç–æ–ª—å –º–æ—â–Ω–æ–π —Ä–∞–¥–∏–∞—Ü–∏–∏ –∏ –∞–Ω–æ–º–∞–ª–∏–π
  // - –¥–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –≤—ã–ø—É—â–µ–Ω–∞ –æ–≥—Ä–æ–º–Ω—ã–º —Ç–∏—Ä–∞–∂–µ–º, –¥–µ—à–µ–≤–∞ –∏ —á–∞—Å—Ç–æ "–ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø–æ –Ω–∞—Å–ª–µ–¥—Å—Ç–≤—É"
  // - –±–æ–ª–µ–µ –ø–æ–¥–æ–±–Ω—ã—Ö –ö–ü–ö –Ω–µ –≤—ã–ø—É—Å–∫–∞—é—Ç, –Ω–∞ –Ω–∏—Ö —Å—Ç–æ–∏—Ç –∑–∞–ø—Ä–µ—Ç, –∫–∞–∫ –∏ –Ω–∞ –≤—Å–µ —Å—Ç–∞–ª–∫–µ—Ä—Å–∫–æ–µ
  // - –º–∞—Å—Ç–µ—Ä–∞ –º–µ–Ω—è—é—Ç –ª–∏—à—å –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞—é—Ç —Å–∞–º–æ –∂–µ–ª–µ–∑–æ
  // - —Ñ—É–Ω–∫—Ü–∏–π –ö–ü–ö —Ö–≤–∞—Ç–∞–µ—Ç, —Ä–∞–∑–≤–µ —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –æ–Ω –Ω–µ –∏—â–µ—Ç, –Ω–æ —ç—Ç–æ –ø–æ–∫–∞ —á—Ç–æ

  // –ë–µ–∑ –ø–∞—Ä–æ–ª—è –æ—Ç –ö–ü–ö –Ω–µ –¥–æ—Å—Ç–∞—Ç—å –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –£–¥–∞–µ—Ç—Å—è –ª–∏—à—å —Å—á–∏—Ç–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–∫–ª–∞–¥–∫–∏.
  // –£–≤–µ—Å–∏—Å—Ç–∞—è –≤—ã—à–ª–∞ —à—Ç—É–∫–∞. –ù–æ –≤ —Ü–µ–ª–æ–º —Ü–µ–Ω–Ω–∞—è –≤–µ—â—å, –µ–µ —Å—Ç–æ–∏—Ç –±–µ—Ä–µ—á—å.

  // üì± /reenter - –ú–µ–Ω—é –ö–ü–ö
  // üö™ /leave - –í—ã—Ö–æ–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
  //       `,
  //     );
  //   }
  // @Action(/artifactXXX.*/gim)
  // async onChoose(@Ctx() ctx: TelegrafContext, @Next() next: NextFunction) {
  //   const match = ctx.match[0];
  //   if (!match) next();
  //   const anomalyId = +match.split('XXX')[1]; // chapterXXX1
  //   const anomalyAll: Anomalies[] = await this.anomaliesRepository.find();
  //   const anomalyTarget: Anomalies = anomalyAll.filter(
  //     (item) => item.id === anomalyId,
  //   )[0];
  //   const anomalyEffects = Array.from(
  //     new Set(anomalyAll.map((item) => item.effects)),
  //   );
  //   await ctx.reply(
  //     `–ê–Ω–æ–º–∞–ª–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç: ${anomalyTarget.name}`,
  //     Markup.inlineKeyboard(
  //       [
  //         ...anomalyEffects.map((anomalyItem) =>
  //           Markup.button.callback(
  //             anomalyItem,
  //             anomalyItem === anomalyTarget.effects
  //               ? 'anomalyTrue'
  //               : 'anomalyFalse',
  //           ),
  //         ),
  //         Markup.button.callback('–ú–µ–Ω—é', 'menu'),
  //       ],
  //       {
  //         columns: 1,
  //       },
  //     ),
  //   );
  // }
  // @Action('anomalyTrue')
  // async anomalyTrue(@Ctx() ctx: TelegrafContext) {
  //   const wayTotal = Math.random() * 100;
  //   if (wayTotal >= 60) {
  //     await ctx.reply('–û—Ç–ª–∏—á–Ω–æ, –∫–æ—Ä–æ–± –ø–æ–¥–æ—à–µ–ª, –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤–µ–¥–µ—Ç —Å–µ–±—è —Å—Ç–∞–±–∏–ª—å–Ω–æ.');
  //     await ctx.scene.leave();
  //   } else {
  //     await ctx.reply(
  //       '–û—Ç–ª–∏—á–Ω–æ, –∫–æ—Ä–æ–± –ø–æ–¥–æ—à–µ–ª, –Ω–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –±—ã–ª –Ω–µ—Å—Ç–∞–±–∏–ª–µ–Ω –∏ –∏—Å—Å—è–∫.',
  //       // Markup.inlineKeyboard([Markup.button.callback('–ú–µ–Ω—é', 'menu')]),
  //     );
  //     await ctx.scene.leave();
  //   }
  // }

  @Action('leave')
  @Command('leave')
  async onLeaveCommand(@Ctx() ctx: Scenes.SceneContext) {
    await ctx.scene.leave();
    // await ctx.scene.enter(ScenesEnum.QUEST);
  }

  // @SceneLeave()
  // async onSceneLeave(@Ctx() ctx: Scenes.SceneContext) {
  //   const telegram_id: number =
  //     ctx?.message?.from.id || ctx?.callbackQuery?.from?.id;
  //   const user: UsersEntity = await this.usersRepository.findOne({
  //     where: { telegram_id: telegram_id },
  //   });
  //   const progress: ProgressEntity = await this.progressRepository.findOne({
  //     where: {
  //       user_id: user.id,
  //     },
  //   });
  //   const keyboard = Markup.inlineKeyboard([
  //     Markup.button.callback('–ú–µ–Ω—é', 'menu'),
  //   ]).reply_markup;
  //   await this.appService.updateDisplay(
  //     progress,
  //     keyboard,
  //     `–ö–ü–ö(PDA) –∑–∞–∫—Ä—ã—Ç`,
  //     // location.image,
  //   );
  // }
}
