"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var PdaScene_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PdaScene = void 0;
const common_1 = require("@nestjs/common");
const typeorm_1 = require("@nestjs/typeorm");
const nestjs_telegraf_1 = require("nestjs-telegraf");
const app_service_1 = require("../app.service");
const anomalies_entity_1 = require("../user/entities/anomalies.entity");
const artifacts_entity_1 = require("../user/entities/artifacts.entity");
const chapters_entity_1 = require("../user/entities/chapters.entity");
const choices_entity_1 = require("../user/entities/choices.entity");
const inventory_items_entity_1 = require("../user/entities/inventory_items.entity");
const locations_entity_1 = require("../user/entities/locations.entity");
const progress_entity_1 = require("../user/entities/progress.entity");
const roads_entity_1 = require("../user/entities/roads.entity");
const users_entity_1 = require("../user/entities/users.entity");
const telegraf_1 = require("telegraf");
const typeorm_2 = require("typeorm");
const scenes_enum_1 = require("./enums/scenes.enum");
let PdaScene = PdaScene_1 = class PdaScene {
    constructor(appService, usersRepository, chaptersRepository, choicesRepository, progressRepository, inventoryItemsRepository, artifactsRepository, anomaliesRepository, locationsRepository, roadsRepository) {
        this.appService = appService;
        this.usersRepository = usersRepository;
        this.chaptersRepository = chaptersRepository;
        this.choicesRepository = choicesRepository;
        this.progressRepository = progressRepository;
        this.inventoryItemsRepository = inventoryItemsRepository;
        this.artifactsRepository = artifactsRepository;
        this.anomaliesRepository = anomaliesRepository;
        this.locationsRepository = locationsRepository;
        this.roadsRepository = roadsRepository;
        this.logger = new common_1.Logger(PdaScene_1.name);
    }
    async onRegister(ctx, next) {
        var _a, _b, _c;
        const telegram_id = ((_a = ctx === null || ctx === void 0 ? void 0 : ctx.message) === null || _a === void 0 ? void 0 : _a.from.id) || ((_c = (_b = ctx === null || ctx === void 0 ? void 0 : ctx.callbackQuery) === null || _b === void 0 ? void 0 : _b.from) === null || _c === void 0 ? void 0 : _c.id);
        const user = await this.usersRepository.findOne({
            where: { telegram_id: telegram_id },
        });
        if (user) {
            const progress = await this.progressRepository.findOne({
                where: { user_id: user.id },
            });
            if (!progress) {
                const lastChapter = await this.chaptersRepository.findOne({
                    order: { id: 1 },
                    where: { content: (0, typeorm_2.Like)('üí≠%') },
                });
                await this.progressRepository.save({
                    user_id: user.id,
                    chapter_id: lastChapter.id,
                });
            }
        }
        else {
            const userRegistered = await this.usersRepository.save({
                telegram_id: telegram_id,
            });
            const lastChapter = await this.chaptersRepository.findOne({
                order: { id: 1 },
                where: { content: (0, typeorm_2.Like)('üí≠') },
            });
            await this.progressRepository.save({
                user_id: userRegistered.id,
                chapter_id: lastChapter.id,
            });
            this.logger.debug(JSON.stringify(userRegistered, null, 2));
        }
        next();
    }
    async onSceneEnter(ctx) {
        var _a, _b, _c;
        const telegram_id = ((_a = ctx === null || ctx === void 0 ? void 0 : ctx.message) === null || _a === void 0 ? void 0 : _a.from.id) || ((_c = (_b = ctx === null || ctx === void 0 ? void 0 : ctx.callbackQuery) === null || _b === void 0 ? void 0 : _b.from) === null || _c === void 0 ? void 0 : _c.id);
        const user = await this.usersRepository.findOne({
            where: { telegram_id: telegram_id },
        });
        const pdaVersion = 'stable';
        const userLocation = await this.locationsRepository.findOne({
            where: { id: user.location },
        });
        await ctx.replyWithHTML(`
üìü –í—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ —Å–≤–æ–π –ö–ü–ö(PDA). –í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏ "${pdaVersion}"

–ó–¥–æ—Ä–æ–≤—å–µ: ${user.health}ü´Ä, –†–∞–¥–∏–∞—Ü–∏—è: ${user.radiation}‚ò¢Ô∏è,
–ö—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ: ${0}ü©∏, –ü—Å–∏-—Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${100}üß†,
–õ–æ–∫–∞—Ü–∏—è: ${userLocation.name},
–°—Ä–µ–¥—Å—Ç–≤–∞: ${user.funds}üõ¢,

üì± /about - –û –ö–ü–ö
üéí /inventory - –†—é–∫–∑–∞–∫ (wip)
üìª /radioTune - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ª–Ω—ã —Ä–∞–¥–∏–æ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏ <b>PDA-X16</b>)
üìç /location - –¢–µ–∫—É—â–∞—è –ª–æ–∫–∞—Ü–∏—è
ü™¨ /quest - –¢–µ–∫—É—à–∏–π –∫–≤–µ—Å—Ç-–∑–∞–¥–∞—á–∞, –µ—ë –ª–æ–∫–∞—Ü–∏—è

üéüüí¥ /buyTickets - –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤ (wip)
üîëüí≥ /crypto - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–æ–≤ (wip)

üïØ /chat - –î–æ—Å—Ç—É–ø V —á–∞—Ç —Å—Ç–∞–ª–∫–µ—Ä–æ–≤ (wip —Ç–æ—Ä–≥–æ–≤–ª—è)
üó∫ /map - –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–π–¥–µ–Ω–Ω–æ–≥–æ –ø—É—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –ó–æ–Ω—ã (wip)
üé≠ /art - –ê—Ä—Ç—ã –ø—Ä–æ STALKER (wip)
üÜò /help - –ü–æ–º–æ—â—å –∏ –ø–æ—è—Å–Ω–µ–Ω–∏—è
üìä /statistics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ (wip)
üí° /feedback - –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç–∑—ã–≤ –æ–± –æ—à–∏–±–∫–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö

üö™ /leave - –í—ã—Ö–æ–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
`);
    }
    async onAbout(ctx, next) {
        await ctx.reply(`
–ö–ü–ö, –æ–Ω –∂–µ PDA - —Å–∞–º—ã–π —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π –¥–µ–≤–∞–π—Å –≤ –ó–æ–Ω–µ. –ü—Ä–∏—á–∏–Ω —Ç–æ–º—É –Ω–µ—Å–∫–æ–ª—å–∫–æ:
- –¥—Ä—É–≥–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–∏ —Å—Ç–æ–ª—å –º–æ—â–Ω–æ–π —Ä–∞–¥–∏–∞—Ü–∏–∏ –∏ –∞–Ω–æ–º–∞–ª–∏–π
- –¥–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å –≤—ã–ø—É—â–µ–Ω–∞ –æ–≥—Ä–æ–º–Ω—ã–º —Ç–∏—Ä–∞–∂–µ–º, –¥–µ—à–µ–≤–∞ –∏ —á–∞—Å—Ç–æ "–ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø–æ –Ω–∞—Å–ª–µ–¥—Å—Ç–≤—É"
- –±–æ–ª–µ–µ –ø–æ–¥–æ–±–Ω—ã—Ö –ö–ü–ö –Ω–µ –≤—ã–ø—É—Å–∫–∞—é—Ç, –Ω–∞ –Ω–∏—Ö —Å—Ç–æ–∏—Ç –∑–∞–ø—Ä–µ—Ç, –∫–∞–∫ –∏ –Ω–∞ –≤—Å–µ —Å—Ç–∞–ª–∫–µ—Ä—Å–∫–æ–µ
- –º–∞—Å—Ç–µ—Ä–∞ –º–µ–Ω—è—é—Ç –ª–∏—à—å –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ—à–∏–≤–∫–∏, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞—é—Ç —Å–∞–º–æ –∂–µ–ª–µ–∑–æ
- —Ñ—É–Ω–∫—Ü–∏–π –ö–ü–ö —Ö–≤–∞—Ç–∞–µ—Ç, —Ä–∞–∑–≤–µ —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –æ–Ω –Ω–µ –∏—â–µ—Ç, –Ω–æ —ç—Ç–æ –ø–æ–∫–∞ —á—Ç–æ

–ë–µ–∑ –ø–∞—Ä–æ–ª—è –æ—Ç –ö–ü–ö –Ω–µ –¥–æ—Å—Ç–∞—Ç—å –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –£–¥–∞–µ—Ç—Å—è –ª–∏—à—å —Å—á–∏—Ç–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–∫–ª–∞–¥–∫–∏.
–£–≤–µ—Å–∏—Å—Ç–∞—è –≤—ã—à–ª–∞ —à—Ç—É–∫–∞. –ù–æ –≤ —Ü–µ–ª–æ–º —Ü–µ–Ω–Ω–∞—è –≤–µ—â—å, –µ–µ —Å—Ç–æ–∏—Ç –±–µ—Ä–µ—á—å.

üì± /reenter - –ú–µ–Ω—é –ö–ü–ö 
üö™ /leave - –í—ã—Ö–æ–¥ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
      `);
    }
    async onLeaveCommand(ctx) {
        await ctx.scene.leave();
    }
    async onSceneLeave(ctx) {
        await ctx.reply('–í—ã –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –ö–ü–ö.', telegraf_1.Markup.inlineKeyboard([telegraf_1.Markup.button.callback('üçî–ú–µ–Ω—é', 'menu')]));
    }
};
__decorate([
    (0, nestjs_telegraf_1.Use)(),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __param(1, (0, nestjs_telegraf_1.Next)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Function]),
    __metadata("design:returntype", Promise)
], PdaScene.prototype, "onRegister", null);
__decorate([
    (0, nestjs_telegraf_1.Command)('/reenter'),
    (0, nestjs_telegraf_1.SceneEnter)(),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], PdaScene.prototype, "onSceneEnter", null);
__decorate([
    (0, nestjs_telegraf_1.Command)('/about'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __param(1, (0, nestjs_telegraf_1.Next)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Function]),
    __metadata("design:returntype", Promise)
], PdaScene.prototype, "onAbout", null);
__decorate([
    (0, nestjs_telegraf_1.Action)('leave'),
    (0, nestjs_telegraf_1.Command)('leave'),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], PdaScene.prototype, "onLeaveCommand", null);
__decorate([
    (0, nestjs_telegraf_1.SceneLeave)(),
    __param(0, (0, nestjs_telegraf_1.Ctx)()),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], PdaScene.prototype, "onSceneLeave", null);
PdaScene = PdaScene_1 = __decorate([
    (0, nestjs_telegraf_1.Scene)(scenes_enum_1.ScenesEnum.PDA),
    __param(1, (0, typeorm_1.InjectRepository)(users_entity_1.Users)),
    __param(2, (0, typeorm_1.InjectRepository)(chapters_entity_1.Chapters)),
    __param(3, (0, typeorm_1.InjectRepository)(choices_entity_1.Choices)),
    __param(4, (0, typeorm_1.InjectRepository)(progress_entity_1.Progress)),
    __param(5, (0, typeorm_1.InjectRepository)(inventory_items_entity_1.InventoryItems)),
    __param(6, (0, typeorm_1.InjectRepository)(artifacts_entity_1.Artifacts)),
    __param(7, (0, typeorm_1.InjectRepository)(anomalies_entity_1.Anomalies)),
    __param(8, (0, typeorm_1.InjectRepository)(locations_entity_1.LocationsEntity)),
    __param(9, (0, typeorm_1.InjectRepository)(roads_entity_1.RoadsEntity)),
    __metadata("design:paramtypes", [app_service_1.AppService,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository,
        typeorm_2.Repository])
], PdaScene);
exports.PdaScene = PdaScene;
//# sourceMappingURL=pda.scene.js.map